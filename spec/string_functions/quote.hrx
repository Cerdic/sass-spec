<===> unquoted/input.scss
a {b: quote(c)}

<===> unquoted/output.css
a {
  b: "c";
}

<===>
================================================================================
<===> quoted_double/input.scss
a {b: quote("c")}

<===> quoted_double/output.css
a {
  b: "c";
}

<===>
================================================================================
<===> quoted_single/input.scss
a {b: quote('c')}

<===> quoted_single/output.css
a {
  b: "c";
}

<===>
================================================================================
<===> quote_unquoted_quote/single/input.scss
// See sass/libsass#2873
a {b: quote(unquote('"'))}

<===> quote_unquoted_quote/single/output.css
a {
  b: '"';
}

<===>
================================================================================
<===> quote_unquoted_quote/double/input.scss
// See sass/libsass#2873
a {b: quote(unquote('"') + unquote("'"))}

<===> quote_unquoted_quote/double/output.css
a {
  b: "\"'";
}

<===>
================================================================================
<===> error/argument_type/input.scss
a {b: quote((1, 2, 3))}

<===> error/argument_type/error
Error: $string: 1, 2, 3 is not a string.
  ,
1 | a {b: quote((1, 2, 3))}
  |       ^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===> error/argument_type/error-libsass
Error: argument `$string` of `quote($string)` must be a string
        on line 1:7 of input.scss, in function `quote`
        from line 1:7 of input.scss
>> a {b: quote((1, 2, 3))}

   ------^

