<===> mixin/input.scss
@use "used";

@include used.a;

<===> mixin/_used.scss
@forward "forwarded";

<===> mixin/_forwarded.scss
@import "imported";

<===> mixin/_imported.scss
@mixin a() {b {c: d}}

<===> mixin/output.css
b {
  c: d;
}

<===>
================================================================================
<===> variable_assignment/input.scss
@use "used";

used.$a: new value;

b {c: used.get-a()};

<===> variable_assignment/_used.scss
@forward "forwarded";

<===> variable_assignment/_forwarded.scss
@import "imported";

<===> variable_assignment/_imported.scss
$a: old value;

@function get-a() {@return $a}

<===> variable_assignment/output.css
b {
  c: new value;
}

<===>
================================================================================
<===> variable_use/input.scss
@use "used";

a {b: used.$c}

<===> variable_use/_used.scss
@forward "forwarded";

<===> variable_use/_forwarded.scss
@import "imported";

<===> variable_use/_imported.scss
$c: d;

<===> variable_use/output.css
a {
  b: d;
}

<===>
================================================================================
<===> with/input.scss
@use "used";

a {b: used.get-c()};

<===> with/_used.scss
@forward "forwarded" with ($c: new value);

<===> with/_forwarded.scss
@import "imported";

<===> with/_imported.scss
$c: old value !default;

@function get-c() {@return $c}

<===> with/output.css
a {
  b: new value;
}
